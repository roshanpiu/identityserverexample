@{
    Layout = null;
}

@using Microsoft.Extensions.Options;
@using IdentityServerWithAspNetIdentity.Services;

@inject IOptions<IdentityServerConfiguration> IdentityServerConfiguration

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
</head>
<body>
    <button id="login">Login</button>
    <button id="api">Call API</button>
    <button id="bucketList">Bucket List</button>
    <button id="logout">Logout</button>

    <pre id="results"></pre>

    <script src="~/lib/oidc-client/dist/oidc-client.min.js"></script>
    <script>
        function log() {
            document.getElementById('results').innerText = '';

            Array.prototype.forEach.call(arguments, function (msg) {
                if (msg instanceof Error) {
                    msg = "Error: " + msg.message;
                }
                else if (typeof msg !== 'string') {
                    msg = JSON.stringify(msg, null, 2);
                }
                document.getElementById('results').innerHTML += msg + '\r\n';
            });
        }

        document.getElementById("login").addEventListener("click", login, false);
        document.getElementById("api").addEventListener("click", api, false);
        document.getElementById("bucketList").addEventListener("click", bucketList, false);
        document.getElementById("logout").addEventListener("click", logout, false);

        var config = {
            authority: "@IdentityServerConfiguration.Value.IdentityServerUri",
            client_id: "js",
            redirect_uri: "@IdentityServerConfiguration.Value.ImplicitJsClientUri" + "/callback",
            response_type: "id_token token",
            scope: "openid profile api1",
            post_logout_redirect_uri: "@IdentityServerConfiguration.Value.ImplicitJsClientUri"
        };
        var mgr = new Oidc.UserManager(config);

        mgr.getUser().then(function (user) {
            console.log(user);
            if (user) {
                log("User logged in", user.profile);
            }
            else {
                log("User not logged in");
            }
        });

        function login() {
            mgr.signinRedirect();
        }

        function api() {
            mgr.getUser().then(function (user) {

                console.log(user);

                if (!user) {
                    alert('please login');
                    return;
                }

                var url = "@IdentityServerConfiguration.Value.ApiUri" + "/identityapi";

                var xhr = new XMLHttpRequest();
                xhr.open("GET", url);
                xhr.onload = function () {
                    log(xhr.status, JSON.parse(xhr.responseText));
                }
                xhr.setRequestHeader("Authorization", "Bearer " + user.access_token);
                xhr.send();
            });
        }

        function bucketList() {

            mgr.getUser().then(function (user) {

                console.log(user);

                if (!user) {
                    alert('please login');
                    return;
                }

                var url = "@IdentityServerConfiguration.Value.ApiUri" + "/identityapi";;

                var xhr = new XMLHttpRequest();
                xhr.open("GET", url);
                xhr.onload = function () {
                    log(xhr.status, JSON.parse(xhr.responseText));
                }
                xhr.setRequestHeader("Authorization", "Bearer " + user.access_token);
                xhr.send();
            });
        }

        function logout() {
            mgr.signoutRedirect();
        }
    </script>

</body>
</html>
